@import "tailwindcss";
@import url('https://fonts.googleapis.com/css2?family=DM+Sans:ital,opsz,wght@0,9..40,100..1000;1,9..40,100..1000&family=Inter:wght@100..900&family=Poppins:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;0,800;0,900;1,100;1,200;1,300;1,400;1,500;1,600;1,700;1,800;1,900&display=swap');

/* Basic typography and reset for all components */

html,
body {
    font-family: 'Inter', sans-serif;
    margin: 0;
    padding: 0;
    box-sizing: border-box;
    overflow-x: hidden;
}

h1,
h2,
h3,
h4,
h5,
h6 {
    font-family: 'Poppins', sans-serif;
}

img {
    max-width: 100%;
    height: auto;
}


/* These animation utility classes are fine as they don't depend on custom variables */

.animation-delay-2000 {
    animation-delay: 2s;
}

.animation-delay-4000 {
    animation-delay: 4s;
}


/* If you have custom keyframe animations, they should be defined as pure CSS classes */

.my-custom-animation {
    animation: my-keyframe 7s infinite;
}

@keyframes my-keyframe {
    0% {
        transform: translate(0px, 0px) scale(1);
    }
    33% {
        transform: translate(30px, -50px) scale(1.1);
    }
    66% {
        transform: translate(-20px, 20px) scale(0.9);
    }
    100% {
        transform: translate(0px, 0px) scale(1);
    }
}


/* Styling for markdown content for prose class */

.prose h1:first-child {
    margin-top: 0;
}

.prose h2 {
    font-size: 1.875rem;
    font-weight: 700;
    margin-top: 2.5rem;
    margin-bottom: 1rem;
    color: #333;
}

.prose h3 {
    font-size: 1.5rem;
    font-weight: 600;
    margin-top: 2rem;
    margin-bottom: 0.75rem;
    color: #333;
}

.prose p {
    margin-bottom: 1.25rem;
    line-height: 1.75;
    color: #4b5563;
}

.prose ul {
    list-style-type: disc;
    margin-left: 1.25rem;
    margin-bottom: 1.25rem;
    color: #4b5563;
}

.prose ol {
    list-style-type: decimal;
    margin-left: 1.25rem;
    margin-bottom: 1.25rem;
    color: #4b5563;
}

.prose li {
    margin-bottom: 0.5rem;
}

.prose a {
    color: #cc6500;
    text-decoration: underline;
}


/* Custom utility for the radio buttons (often added via plugin, but direct CSS for simplicity) */


/* This matches the color used in your components' Tailwind classes like text-[#cc6500] */

input[type="radio"].form-radio {
    accent-color: #cc6500;
    /* Use accent-color for native radio button styling */
}


/* You might also need to add ring styles for focus for full consistency in globals if not directly in component */


/* For example:
input[type="radio"].form-radio:focus {
  outline: none;
  box-shadow: 0 0 0 2px rgba(204, 101, 0, 0.5);
}
*/